# .github/workflows/deploy_staging.yml

name: Deploy to Staging

on:
  push:
    branches: ["develop"]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image for Staging
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/tag_website:latest
          

      - name: Wait for Docker Hub propagation
        run: sleep 10

      - name: Verify Docker Image Push
        run: |
          echo "Verifying image tag exists on Docker Hub..."
          STATUS=$(curl -s -o /dev/null -w "%{http_code}" -u "${{ secrets.DOCKERHUB_USERNAME }}:${{ secrets.DOCKERHUB_TOKEN }}" \
            "https://hub.docker.com/v2/repositories/${{ secrets.DOCKERHUB_USERNAME }}/tag_website/tags/latest/")

          if [ "$STATUS" -ne 200 ]; then
            echo "❌ Docker image not found. Status code: $STATUS"
            echo "Waiting a bit longer or checking tag name might help."
            exit 1
          else
            echo "✅ Docker image successfully pushed and verified."
          fi

      - name: Pull React Docker Image
        run: docker pull ${{ secrets.DOCKERHUB_USERNAME }}/tag_website:latest

      - name: Stop and Remove Old React Docker Container
        run: |
          docker stop tag_website-staging || true
          docker rm tag_website-staging || true

      - name: Run React Docker Container
        run: docker run -d -p 4004:80 --name tag_website-staging ${{ secrets.DOCKERHUB_USERNAME }}/tag_website:latest
